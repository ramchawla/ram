% THIS RAM PROGRAM ILLUSTRATES FUNCTION EXAMPLES


% Example of a function with no return
new function equals takes (x,y) {
    if (x) is (y) {
        set boolean result to true
    } else {
        set boolean result to false
    }

    send back result
}


% Example of a function with parameter and return
new function compute takes (number) {
    % initialise variable z
    set integer z to 0

    loop with i from (1) to (number) {
        reset integer z to i
    }

    send back z
}


% example of a function with no parameters
new function celebration takes (none) {
    % celebrate something
    display "HOORAY - They are Equal!"
    display "This is a celebration!"
}


% sample recursive function
new function sum_numbers takes (starting_number) {
    if starting_number is 0 {
        set integer return to starting_number
    } else {
        set integer x to starting_number - 1
        set integer return to starting_number + sum_numbers[starting_number=x]
    }

    send back return
}


% example of main function
new function main takes (none) {
    % get user input for two values
    display "Enter two values to compare: "
    set integer result_one to compute[number=GET_NUMBER]
    set integer result_two to compute[number=GET_NUMBER]

    % check if the results are equal
    if equals[x=result_one,y=result_two] {
        call celebration[none=0]
    } else {
        display "They are not equal."
    }

    % call recursive function numbers
    display sum_numbers[starting_number=8]
}


% call the main function
call main[none=0]
